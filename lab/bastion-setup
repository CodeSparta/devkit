#!/bin/ansible-playbook
- name: Build CCIO OCP MiniStack CloudCtl Bastion LXD Container (RDP Enabled)
  hosts: localhost
  connection: local
  vars_files:
    - vars/custom.yml
    - vars/grub.yml
    - vars/user.yml
  tasks:
    - name: CloudCtl - Build Profile
      lxd_profile:
        name: cloudctl
        state: present
        config: 
          linux.kernel_modules: ip6table_filter,iptable_filter
          security.privileged: "true"
          security.nesting: "true"
          boot.autostart: "true"
        devices:
          eth0:
            name: eth0
            nictype: bridged
            parent: external
            type: nic
          eth1:
            name: eth1
            nictype: bridged
            parent: internal
            type: nic
          eth2:
            name: eth2
            nictype: bridged
            parent: ocp-mini-stack
            type: nic
          root:
            path: /
            pool: default
            type: disk
    - name: CloudCtl - Create Container
      lxd_container:
        name: cloudctl
        state: started
        source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: simplestreams
          alias: fedora/31/amd64
        profiles: ["cloudctl"]
        wait_for_ipv4_addresses: true
- hosts: cloudctl
  vars:
    ansible_connection: lxd
    ansible_host: cloudctl
  vars_files:
    - vars/custom.yml
    - vars/grub.yml
    - vars/user.yml
  tasks:
    - name: CloudCtl - Load MiniStack PubKey as authorized_key
      authorized_key:
        state: present
        manage_dir: yes
        user: root
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    - name: CloudCtl - Create User
      user:
        name: "{{ ministack_username }}"
        groups: wheel
        append: yes
    - name: CloudCtl - Load MiniStack PubKey as authorized_key
      authorized_key:
        state: present
        manage_dir: yes
        user: "{{ ministack_username }}"
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    - name: CloudCtl - Import SSH Pub Key from "{{ github_username }}"
      authorized_key:
        state: present
        user: "{{ ministack_username }}"
        key: "https://{{ git_ssh_pubkey_provider }}.com/{{ git_ssh_pubkey_username }}.keys"
    - name: CloudCtl - Create .ssh folder
      file:
        path: /home/"{{ ministack_username }}"/.ssh
        state: directory
        owner: "{{ ministack_username }}"
        group: "{{ ministack_username }}"
        mode: 0700
    - name: CloudCtl - Push MiniStack SSH Key Pair (pubk)
      copy:
        src: "{{ lookup('env','HOME') + '/.ssh/id_rsa.pub' }}"
        dest: /home/"{{ ministack_username }}"/.ssh/id_rsa.pub
        owner: "{{ ministack_username }}"
        group: "{{ ministack_username }}"
        mode: 0600
    - name: CloudCtl - Push MiniStack SSH Key Pair (privk)
      copy:
        src: "{{ lookup('env','HOME') + '/.ssh/id_rsa' }}"
        dest: /home/"{{ ministack_username }}"/.ssh/id_rsa
        owner: "{{ ministack_username }}"
        group: "{{ ministack_username }}"
        mode: 0600
    - name: CloudCtl - Push MiniStack SSH Key Pair (pubk)
      copy:
        src: templates/cloudctl/sudoer
        dest: /etc/sudoers.d/"{{ ministack_username }}"
        owner: root
        group: root
        mode: 0644
    - name: CloudCtl - Update Packages
      delegate_to: cloudctl
      raw: dnf update -y
    - name: CloudCtl - Install Prereqs
      delegate_to: cloudctl
      raw: dnf install -y git ansible openssh-server
    - name: CloudCtl - Install Prereqs
      delegate_to: cloudctl
      raw: systemctl enable --now sshd
    - name: CloudCtl - Push Network Configs
      copy:
        src: templates/cloudctl/eth0.network
        dest: /etc/systemd/network/et0.network
    - name: CloudCtl - Push Network Configs
      copy:
        src: templates/cloudctl/eth1.network
        dest: /etc/systemd/network/eth1.network
    - name: CloudCtl - Push Network Configs
      copy:
        src: templates/cloudctl/eth2.network
        dest: /etc/systemd/network/eth2.network
- hosts: localhost
  vars_files:
    - vars/custom.yml
    - vars/grub.yml
    - vars/user.yml
  tasks:
    - name: CloudCtl - Restart to apply Networkd Config
      lxd_container:
        name: cloudctl
        state: restarted
    - name: CloudCtl - Wait for Restart
      command: sleep 8
- hosts: 
    - 172.10.0.3
  vars:
    ansible_connection: ssh
    ansible_host: 172.10.0.3
  vars_files:
    - vars/custom.yml
    - vars/grub.yml
    - vars/user.yml
    - roles/base/vars/main.yml
  tasks:
    - name: CloudCtl - Upgrade All Packages
      become: yes
      package:
        name: "*"
        state: latest
    - name: CloudCtl - Install Snapd for LXD
      dnf:
        name: snapd
        state: present
      become: yes
    - name: CloudCtl - Install Base Fedora Packages
      become: yes
      package:
        name: "{{ packages_base_fedora }}"
        state: present
    - name: create /snap symlink
      file:
        state: link
        src: /var/lib/snapd/snap
        dest: /snap
        owner: root
        group: root
      become: yes
    - name: restart the snapd service
      systemd:
        name: snapd.service
        enabled: yes
        state: restarted
      become: yes
    - name: Snapd Ready Workaround - part1
      command: snap list 
      ignore_errors: yes
    - name: Snapd Ready Workaround - part2
      command: sleep 30
      ignore_errors: yes
    - name: CloudCtl - snap install snapd
      become: yes
      snap:
        name:
          - snapd
    - name: CloudCtl - install lxd snap
      become: yes
      snap:
        name: lxd
        channel: latest/edge
- hosts: localhost
  vars_files:
    - vars/custom.yml
    - vars/grub.yml
    - vars/user.yml
    - roles/base/vars/main.yml
  tasks:
    - name: CloudCtl - Clone MiniStack Git Repo
      command: "ssh -o 'StrictHostKeyChecking=no' {{ ministack_username }}@172.10.0.3 -i ~/.ssh/id_rsa 'git clone https://github.com/containercraft/ocp-mini-stack.git ~/.ccio/ocp-mini-stack'"
      become_user: "{{ ministack_username }}"
      become: true
      ignore_errors: yes
